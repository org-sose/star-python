#CREATE
#a = [1, 1.1, "a", [1], (1, 1.1) {1, 2}, {'a': 1}, None,True]
#a = [] # Пустой список
#b = list() # Пустой список
#a = (1, 2.1, 3) # Раньше я был кортежем
#list(a) # [1, 2.1, 3], но 'a' остался кортежем
#b = list('abc') # ['a', 'b', 'c']

#RETRIVE
#a = [1, 1.1, 'a']
#print(a) # [1, 1.1, 'a']
#print([1, 1.1, 'a']) # [1, 1.1, 'a']

#a = [1, 1.1, 'a']
#a[0] # 1
#a[1] # 1.1
#a[2] # 'a'
#a[3] # Ошибка, вышли за границы
#a[-1] # 'a'
#a[-2] # 1.1
#a[-3] # 1
#a[-4] # Ошибка, вышли за границы
#a = [1,2,3]
#a.index(3)

#UPDATE
#a = [1, 1.1, 'a']
#a[0] = 'a' # Теперь 'a' равно ['a', 1.1, 'a']
#a[1] = 'б' # Теперь 'a' равно ['a', 'б', 'a']
#a[-1] = 'в' # Теперь 'a' равно ['a', 'б', 'в']
#a = [1,2,3] # Теперь 'a' равно [1,2,3]

#a = [1, 2, 3]
#a.append(4) # Добавляет значение (объект) в конце списка. Добавляет только один объект или значение.Теперь "a" [1 , 2, 3, 4]
#a.append (['a''b']) # Теперь "a" [1, 2, 3, 4, ['a', 'b']]. Не забываем, что методы в списке изменяют значения и структуру в самом списке
#a = [1, 2, 3]
#a.insert(0, 4) # Добавляет значение (объект), что стоит на втором месте (4) на место под индексом, что стоит на первом месте (0). В конкретном примере добавит 4 на О-ой индекс, т.е. вначало. Теперь "а" [4, 1, 2, 3]
#a=[1, 2, 3]
#a.insert(3, 4) # В конкретном примере Добавит 4 на 3-ий индекс, т.е. вконец. Теперь "a" [1, 2, 3, 4].
#a = [1, 2, 3]
#a.insert(-1, 4) # Кажется, что здесь должно значение 4 добавиться в конец, но на самом деле 4 встанет в предпоследнее место. Теперь "a" [1, 2, 4, 3].
#a = [1, 2, 3]
#a.extend([4, 5, 6]) # Добавляет данные в список поэлементно. Теперь "а" [1, 2, 3, 4, 5, 6]

#DELETE
#a =[1, 1.1, 'a']
#del a[0] # Теперь 'a' равно [1.1, 'a']
#del a[-1] # Теперь 'a' равно [1.1]
#del a[-1] # Теперь 'a' рфвео []
#del a # Полное удаление переменной "a"

#a =[1, 2, 3]
#a.clear() # Полностью очищает список, превращая его в пустой список. Теперь "a" []
#a = [1, 2, 3]
#a.pop() # Возвращает последний элемент и удляет его из списка. В примере вернёт 3 и удолит его из списка. Теперь "a" [1, 2]
#a = [1, 'ab', 3]
#a.pop(1) # Возвращает элемент по указанному ИНДЕКСУ и удаляет его из списка. В примере вернёт 'ab' и удалит его из списка. Теперь "a" [1, 3]. Если такого индекса нет, то возникает ошибка indexError:pop index out of range
#a = [1, 2, 'ab']
#a.remove('ab') # Удерживает элемент по указанному значению из списка. Если данного значения нет, то появится ошибка. Теперь "a"[1, 2]. Если такого значения нет, то возникает ошибка ValueError: list.remove(x): x not in list

#a = [1, 2, 3]
#b = [4, 5, 6]
#c = a + b
#print(c) # '[1, 2, 3, 4, 5, 6]'
#a += b # Теперь "a" равно '[1, 2, 3, 4, 5, 6]'

#a = [1, 2, 3]
#b = 2
#c = a *  b
#print(c)  # [1, 2, 3, 1, 2, 3]
#a *=b # Теперь "a" равно [1, 2, 3, 1, 2, 3]

#a = [1, 2, 3] # Это одномерный список
#b = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] # Это двумерный (список в списке) список. Его можно представить как:
#[[1, 2, 3],
#[4, 5, 6],
#[7, 8, 9]]

#b = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
#b[0] # Получение 1-го списка [1, 2, 3]
#b[0][0] # Получение 1-го элемекнта "1" из 1-го списка [1, 2, 3]
#b(-1)[-1] # Получение последнего элемента "9" из последнего списка [7, 8, 9]



#help(list) # Информция о списках
#a = [1, 1, 3.1]
#a.count(1)
#a = [1, 2, 3]
#a.copy()
#a = [1, 2, 3]
#a = [2, 1, 3]
#a = [2, 1, 3]
#a.sort(reverse=True)

#a = [1, 2, [1, 2, 3]]
#b = a.copy()
#b[2][0] = 10
#print(a)
#b[0] = 10
#print(a)

#from copy import deepcopy
#a = [1, 2, [1, 2, 3]]
#b = deepcopy(a)
#b[2][0] = 10
#print(a)

#a = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
#b = [[0] * 3] * 3
#a[0][0] = 1
#b[0][0] = 1


Задачи
#a = [2, -93, -2, 8, None, -44, -1, -85, -14, 90, -22, -90, -100, -8, 38, -92, -45, 67, 53, 25]
#b = len(a)
#c = sum(a)
#a[4] = sum(a) // len(a)
#list_players = ["Маша", "Петя", "Саша", "Оля", "Кирилл", "Коля"]
#team1 = list_players[:total_players//2]
#team2 = list_players[total_players//2:]
#print("команда 1:", team1)
#print("команда 2", team2)
#mails = ["Письмо 1", "Письмо 2", "Письмо 3", "Письмо 4", "Письмо 5"]
#email = mails [ : : -1]
#print(email)
#emails = ["Письмо 1", "Письмо 2", "Письмо 3", "Письмо 4", "Письмо 5"]
#print("Третье письмо:", emails[2])
#print("Предпоследнее письмо:", emails[-2])
#results = [10, 8, 9, 7, 6, 9, 10, 8, 9, 10]
#count_total = len(results) #кол-во чисел
#average = sum_total / count_total
#min_score = min(results)
#max_score = max(results)
#print("среднее арифметическое всех результатов выстрелов:", average)
#print("наименьшее количество очков за выстрел:", min_score)
#print("наибольшее количество очков за выстрел:", max_score)
#fruits = ["яблоко", "банан", "опельсин", "виноград"]
#wrong_word  = fruits[2]
#correct_word = "a" + wrong_word[1 :]
#fruits[2] = correct_word
#print(fruits)
#speed = 4096
#time_minutes = 120
#cost_per_kb = 0.125
#speed_kb = speed / 1024
#time_seconds = time_minutes * 60
#file_size_kb = speed_kb * time_seconds
#paid_traffic = max(file_size_kb - 500, 0)
#traffic_cost = paid_traffic * cost_per_kb
#print(f"Размер файла в килобайтах: {file_size_kb}")
#print(f"За трафик придется заплатить: {traffic_cost}")