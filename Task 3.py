CREATE
a = [1, 1.1, "a", [1], (1, 1.1) {1, 2}, {'a': 1}, None,True]
a = [] # Пустой список
b = list() # Пустой список
a = (1, 2.1, 3) # Раньше я был кортежем
list(a) # [1, 2.1, 3], но 'a' остался кортежем
b = list('abc') # ['a', 'b', 'c']

RETRIVE
a = [1, 1.1, 'a']
print(a) # [1, 1.1, 'a']
print([1, 1.1, 'a']) # [1, 1.1, 'a']

a = [1, 1.1, 'a']
a[0] # 1
a[1] # 1.1
a[2] # 'a'
a[3] # Ошибка, вышли за границы
a[-1] # 'a'
a[-2] # 1.1
a[-3] # 1
a[-4] # Ошибка, вышли за границы
a = [1,2,3]
a.index(3)

UPDATE
a = [1, 1.1, 'a']
a[0] = 'a' # Теперь 'a' равно ['a', 1.1, 'a']
a[1] = 'б' # Теперь 'a' равно ['a', 'б', 'a']
a[-1] = 'в' # Теперь 'a' равно ['a', 'б', 'в']
a = [1,2,3] # Теперь 'a' равно [1,2,3]

a = [1, 2, 3]
a.append(4) # Добавляет значение (объект) в конце списка. Добавляет только один объект или значение.Теперь "a" [1 , 2, 3, 4]
a.append (['a''b']) # Теперь "a" [1, 2, 3, 4, ['a', 'b']]. Не забываем, что методы в списке изменяют значения и структуру в самом списке
a = [1, 2, 3]
a.insert(0, 4) # Добавляет значение (объект), что стоит на втором месте (4) на место под индексом, что стоит на первом месте (0). В конкретном примере добавит 4 на О-ой индекс, т.е. вначало. Теперь "а" [4, 1, 2, 3]
a=[1, 2, 3]
a.insert(3, 4) # В конкретном примере Добавит 4 на 3-ий индекс, т.е. вконец. Теперь "a" [1, 2, 3, 4].
a = [1, 2, 3]
a.insert(-1, 4) # Кажется, что здесь должно значение 4 добавиться в конец, но на самом деле 4 встанет в предпоследнее место. Теперь "a" [1, 2, 4, 3].
a = [1, 2, 3]
a.extend([4, 5, 6]) # Добавляет данные в список поэлементно. Теперь "а" [1, 2, 3, 4, 5, 6]

DELETE
a =[1, 1.1, 'a']
del a[0] # Теперь 'a' равно [1.1, 'a']
del a[-1] # Теперь 'a' равно [1.1]
del a[-1] # Теперь 'a' рфвео []
del a # Полное удаление переменной "a"

a =[1, 2, 3]
a.clear() # Полностью очищает список, превращая его в пустой список. Теперь "a" []
a = [1, 2, 3]
a.pop() # Возвращает последний элемент и удляет его из списка. В примере вернёт 3 и удолит его из списка. Теперь "a" [1, 2]
a = [1, 'ab', 3]
a.pop(1) # Возвращает элемент по указанному ИНДЕКСУ и удаляет его из списка. В примере вернёт 'ab' и удалит его из списка. Теперь "a" [1, 3]. Если такого индекса нет, то возникает ошибка indexError:pop index out of range
a = [1, 2, 'ab']
a.remove('ab') # Удерживает элемент по указанному значению из списка. Если данного значения нет, то появится ошибка. Теперь "a"[1, 2]. Если такого значения нет, то возникает ошибка ValueError: list.remove(x): x not in list

a = [1, 2, 3]
b = [4, 5, 6]
c = a + b
print(c) # '[1, 2, 3, 4, 5, 6]'
a += b # Теперь "a" равно '[1, 2, 3, 4, 5, 6]'

a = [1, 2, 3]
b = 2
c = a *  b
print(c)  # [1, 2, 3, 1, 2, 3]
a *=b # Теперь "a" равно [1, 2, 3, 1, 2, 3]

a = [1, 2, 3] # Это одномерный список
b = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] # Это двумерный (список в списке) список. Его можно представить как:
[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]

b = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
b[0] # Получение 1-го списка [1, 2, 3]
b[0][0] # Получение 1-го элемекнта "1" из 1-го списка [1, 2, 3]
b(-1)[-1] # Получение последнего элемента "9" из последнего списка [7, 8, 9]



help(list)
a = [1, 1, 3.1]
a.count(1)
a = [1, 2, 3]
a.copy()
a = [1, 2, 3]
a = [2, 1, 3]
a = [2, 1, 3]
a.sort(reverse=True)

a = [1, 2, [1, 2, 3]]
b = a.copy()
b[2][0] = 10
print(a)
b[0] = 10
print(a)

from copy import deepcopy
a = [1, 2, [1, 2, 3]]
b = deepcopy(a)
b[2][0] = 10
print(a)

a = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
b = [[0] * 3] * 3
a[0][0] = 1
b[0][0] = 1


Задачи
a = [2, -93, -2, 8, None, -44, -1, -85, -14, 90, -22, -90, -100, -8, 38, -92, -45, 67, 53, 25]
b = len(a)
c = sum(a)
a[4] = sum(a) // len(a)
list_players = ["Маша", "Петя", "Саша", "Оля", "Кирилл", "Коля"]
b = len(a)
a[4] = len(a) //